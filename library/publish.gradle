/*
 * Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
 *
 * WSO2 Inc. licenses this file to you under the Apache License,
 * Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */

apply plugin: 'maven-publish'
apply plugin: 'com.jfrog.bintray'

// Run this task with ./gradlew publishToMavenLocal if you wish to publish to your local m2. Else
// run with ./gradlew publish
publishing {
    publications {
        Production(MavenPublication) {
            artifact("$buildDir/outputs/aar/$project.archivesBaseName-${version}.aar")
            artifactId project.archivesBaseName
            groupId project.group
            version project.version

            pom.withXml {
                def dependenciesNode = asNode().appendNode('dependencies')
                configurations.implementation.allDependencies.each {
                    if (it.name != 'unspecified') {
                        def dependencyNode = dependenciesNode.appendNode('dependency')
                        dependencyNode.appendNode('groupId', it.group)
                        dependencyNode.appendNode('artifactId', it.name)
                        dependencyNode.appendNode('version', it.version)
                    }
                }
            }
        }
    }
}

bintray {
    user = System.getenv("BINTRAY_USER")
    key = System.getenv("BINTRAY_API_KEY")
    publications = ['Production']
    configurations = ['archives']
    // Default: false. Whether to run this as dry-run, without deploying
    dryRun = false
    // Default: false. Whether to override version artifacts already published
    override = false
    // Default: true. Whether version should be auto published after an upload
    publish = true
    pkg {
        repo = 'oidc-android' // the name of the repository  created on Bintray
        name = 'wso2-oidc-sdk' // the name of the package created inside it
        version {
            name = this.version
            released = new Date()
            vcsTag = this.version
        }
    }
}

afterEvaluate {
    def file = file("$buildDir/outputs/aar/$project.archivesBaseName-release.aar")
    tasks.named("assembleRelease").configure {
        doLast {
            file.renameTo("$buildDir/outputs/aar/$project.archivesBaseName-${version}.aar")
        }
    }
}

task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}

artifacts {
    archives sourcesJar
}

apply plugin: 'maven'

